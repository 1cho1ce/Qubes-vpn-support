#!/bin/sh

########################################################################
##
##  proxy-firewall-restrict
##  Configure Qubes firewall for use with a tunnel such as OpenVPN.
##
##  Note: For customization, add rules to a filename in firewall.d
##  other than '90_tunnel-restrict'.


groupadd -rf qvpn && sync

# Set firewall restriction policy

# Stop all leaks between downstream (vif+) and upstream (Internet eth0):
iptables -P FORWARD DROP
iptables -I FORWARD -o eth0 -j DROP
iptables -I FORWARD -i eth0 -j DROP

ip6tables -P FORWARD DROP
ip6tables -I FORWARD -o eth0 -j DROP
ip6tables -I FORWARD -i eth0 -j DROP

# Block INPUT from tunnel(s):
iptables -P INPUT DROP
iptables -I INPUT -i tun+ -j DROP

ip6tables -P INPUT DROP
ip6tables -I INPUT -i tun+ -j DROP

# Allow established v6 traffic (v4 rule already present):
#iptables -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT
ip6tables -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT

# Disable icmp packets
#if iptables -C INPUT -p icmp -j ACCEPT
#then iptables -D INPUT -p icmp -j ACCEPT
#fi


###-------------------------------------------------------------------###
# This section executed only if a vpn-handler* service is active:
if ! ls /var/run/qubes-service/vpn-handler* 1> /dev/null 2>&1; then
    exit 0
fi

# Prevent accidental communications from within VPN VM to net;
# The gid-owner rule requires net programs be run with group ID 'qvpn'
# to allow outbound traffic.
iptables -P OUTPUT DROP
iptables -I OUTPUT -o lo -j ACCEPT
iptables -I OUTPUT -p all -o eth0 -m owner --gid-owner qvpn -j ACCEPT

ip6tables -P OUTPUT DROP
ip6tables -I OUTPUT -o lo -j ACCEPT
ip6tables -I OUTPUT -p all -o eth0 -m owner --gid-owner qvpn -j ACCEPT

